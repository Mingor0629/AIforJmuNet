import java.util.Scanner;

public class one {

	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);
		char answer = 'y';
		while(answer == 'y') {
			int[][] chessPiece = new int[3][3];
			int step = 0;
			while(whoWin(chessPiece) == 0 && step != 9) {
				chessBoard(chessPiece);
				if(step % 2 != 0) {
					System.out.print("Enter a row (1, 2, or 3) for player AI:");
					int row = input.nextInt() - 1;
					System.out.print("Enter a column (1, 2, or 3) for player AI:");
					int column = input.nextInt() - 1;
					int judge = isLegal(row, column, chessPiece);
					if(judge == -1) {
						System.out.println("You input a wrong place, please input a right one!");
						continue;
					}
					else if(judge == 0)
						chessPiece[row][column] = -1;
					else {
						System.out.println("This site has been taken up!");
						System.out.println("Please put your chess at another place!");
						continue;
					}
				}
				else {
					System.out.print("Enter a row (1, 2, or 3) for player 201621123077:");
					int row = input.nextInt() - 1;
					System.out.print("Enter a column (1, 2, or 3) for player 201621123077:");
					int column = input.nextInt() - 1;
					int judge = isLegal(row, column, chessPiece);
					if(judge == -1) {
						System.out.println("You input a wrong place, please input a right one!");
						continue;
					}
					else if(judge == 0)
						chessPiece[row][column] = 1;
					else {
						System.out.println("This site has been taken up!");
						System.out.println("Please put your chess at another place!");
						continue;
					}
				}
				step++;
			}
			chessBoard(chessPiece);
			if(step == 9)
				System.out.println("You were neck and neck!");
			else if(whoWin(chessPiece) == -1)
				System.out.println("AI player won");
			else
				System.out.println("201621123077 player won");
			System.out.print("Do you want another ticktacktoe? Enter y or n:");
			String answer_string = input.next();
			answer = answer_string.charAt(0);
		}
		System.out.println("Why not have another ticktacktoe?");
	}

	public static void chessBoard(int[][] chessPiece) {
		for(int i = 0 ; i < 3; i++) {
			System.out.printf("-------------------\n");
			for(int j = 0; j < 3; j++) {
				System.out.printf("|  %c  ", chessTranslation(chessPiece[i][j]));
				if(j == 2)
					System.out.printf("|");
			}
			System.out.printf("\n");
			if(i == 2)
				System.out.printf("-------------------\n");
		}
	}
	
	public static char chessTranslation(int location){
		if(location == -1)
			return 'X';
		else if(location == 1)
			return 'O';
		else
			return ' ';
	}
	
	public static int whoWin(int[][] cB) {
		int result = 0;
		if(cB[0][0] + cB[1][1] + cB[2][2] == 3)
			result = 1;
		else if(cB[0][0] + cB[1][1] + cB[2][2] == -3)
			result = -1;
		else if(cB[0][2] + cB[1][1] + cB[2][0] == 3)
			result = 1;
		else if(cB[0][2] + cB[1][1] + cB[2][0] == -3)
			result = -1;
		else if(cB[0][0] + cB[0][1] + cB[0][2] == 3)
			result = 1;
		else if(cB[0][0] + cB[0][1] + cB[0][2] == -3)
			result = -1;
		else if(cB[1][0] + cB[1][1] + cB[1][2] == 3)
			result = 1;
		else if(cB[1][0] + cB[1][1] + cB[1][2] == -3)
			result = -1;
		else if(cB[2][0] + cB[2][1] + cB[2][2] == 3)
			result = 1;
		else if(cB[2][0] + cB[2][1] + cB[2][2] == -3)
			result = -1;
		else if(cB[0][0] + cB[1][0] + cB[2][0] == 3)
			result = 1;
		else if(cB[0][0] + cB[1][0] + cB[2][0] == -3)
			result = -1;
		else if(cB[0][1] + cB[1][1] + cB[2][1] == 3)
			result = 1;
		else if(cB[0][1] + cB[1][1] + cB[2][1] == -3)
			result = -1;
		else if(cB[0][2] + cB[1][2] + cB[2][2] == 3)
			result = 1;
		else if(cB[0][2] + cB[1][2] + cB[2][2] == -3)
			result = -1;
		else
			result = 0;
		
		return result;
	}
	
	public static int isLegal(int row, int column, int[][] cB) {
		if(row > 2 || row < 0 || column > 2 || column < 0)
			return -1;
		else if(cB[row][column] == 0)
			return 0;
		else
			return 1;
	}
}
