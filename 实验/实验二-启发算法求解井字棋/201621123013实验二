package Work1;

import java.util.Scanner;

public class Well {
	private int row=3;
	private int col=3;
	

	public void setCol(int col) {
		this.col = col;
	}
	
	public int getCol() {
		return col;
	}
	
	public void setRow(int row) {
		this.row = row;
	}
	
	public int getRow() {
		return row;
	}
	
	
	public Well(){
		
		Initmap();
	    Showmap();
	    while ((!isFull()) && (!isWin()))
	    {
	    	
	        HumanPlay();
	        Showmap();
	        
	        System.out.printf("-----------------------\n\n");
	        if (isWin())
	            break;
	        PcPlay();
	        Showmap();
	        
	    }

	    if (isFull())
	        System.out.printf("\n\n201621123013��������AI���ƽ�֣�\n");
	}
	
	
	int[][] chessboard = new int[3][3];
	int[][] score = new int[3][3];
	
	private void Initmap()
	{
		for (int i = 0; i < row; i++)
	         for (int j = 0; j < col; j++)
	              chessboard[i][j] = 1;
		
	}
	
	private void Showmap()
	 {
		
	    for (int i = 0; i < row; i++)
	    {
	        for (int j = 0; j < col; j++)
	        {
	             if (chessboard[i][j] == 1)    //"1"Ϊ��
	                System.out.printf("  ��");
	             
	             if (chessboard[i][j] == 2)    //"2"Ϊ��
	            	 System.out.printf("  o");
	             
	             if (chessboard[i][j] == 5)    //"5"Ϊ����
	            	 System.out.printf("  x");
	          }
	        System.out.println("\n");
	      }
	  }
	
	
	private boolean isWin()
	  {
	      int sum = 0;
	      for (int i = 0; i < row; i++)      //��ÿ���ж��Ƿ��ʤ
	     {
	          for (int j = 0; j < col; j++)
	              sum += chessboard[i][j];
	  
	          if (sum == 6)
	          {
	              System.out.println("�˻�ʤ��\n");
	              return true;
	          }
	          if (sum == 15)
	          {
	              System.out.println("���Ի�ʤ��\n");
	              return true;
	          }
	          sum = 0;
	      }
	  
	      for (int j = 0; j < row; j++)      //��ÿ���ж��Ƿ��ʤ
	      {
	          for (int i = 0; i < col; i++)
	              sum += chessboard[i][j];
	  
	          if (sum == 6)
	          {
	             System.out.println("�˻�ʤ��\n");
	              return true;
	          }
	          if (sum == 15)
	          {
	              System.out.println("���Ի�ʤ��\n");
	              return true;
         }
	         sum = 0;
	     }
	 
	     for (int i = 0; i < row; i++)     //�ԶԽ����ж��Ƿ��ʤ
	         sum += chessboard[i][i];
	     if (sum == 6)
	     {
	         System.out.println("�˻�ʤ��\n");
	         return true;
	     }
	    if (sum == 15)
	     {
	    	System.out.println("���Ի�ʤ��\n");
	         return true;
	     }
	 
	     sum = 0;
	     for (int i = 0; i < row; i++)     //�Է��Խ����ж��Ƿ��ʤ
	         sum += chessboard[i][2 - i];
	     if (sum == 6)
	     {
	    	 System.out.println("�˻�ʤ��\n");
	         return true;
	     }
	     if (sum == 15)
	     {
	    	 System.out.println("���Ի�ʤ��\n");
	         return true;
	     }
	 
	     return false;
	 }
	
	
	private boolean isFull()
	{
	    for (int i = 0; i < row; i++)
	        for (int j = 0; j < col; j++)
	            if (chessboard[i][j] == 1)
	                return false;
	    return true;
	}
	
	
	void HumanPlay()
	{
		Scanner in = new Scanner(System.in);
	    int x, y;
	    System.out.println("���ӵĺ�����X:");
	     x = in.nextInt();
	    System.out.println("���ӵ�������Y:");
	     y = in.nextInt();

	    while (x < 1 || x>3 || y < 1 || y>3)
	    {
	    	System.out.println("\n����ȷ���룡\n");
	    	System.out.println("x,y������1~3\n\n");

	    	System.out.println("���ӵĺ�����X:");
	    	 x = in.nextInt();
	        System.out.println("���ӵ�������Y:");
	         y = in.nextInt();
	    }

	    while (chessboard[3 - y][x - 1] != 1)
	    {
	    	System.out.println("\n\n��λ�ñ�ռ�ã�����\n");
	    	System.out.println("ѡ����ȷ��λ�����ӣ�����\n\n");

	        System.out.println("\n���ӵĺ�����X:");
	        x = in.nextInt();
	        System.out.println("���ӵ�������Y:");
	        y = in.nextInt();
	    }

	    chessboard[3 - y][x - 1] = 2;
	}

	
	private void PcPlay()
	{
	    int sum = 0;
		for (int i = 0; i < row; i++)
	        for (int j = 0; j < col; j++)
	            score[i][j] = 0;

	    // ��ÿ�н��з���ͳ��
	    for (int i = 0; i < row; i++)
	    {
	        for (int j = 0; j < col; j++)
	            sum += chessboard[i][j];

	        switch (sum)
	        {
	        case 3:                     
	            for (int k = 0; k < col; k++)
	            {
	                if (chessboard[i][k] == 1)
	                    score[i][k] += 1;
	            }
	            break;
	        case 4:                    
	            for (int k = 0; k < col; k++)
	            {
	                if (chessboard[i][k] == 1)
	                    score[i][k] += 10;
	            }
	            break;
	        case 8:                    
	            for (int k = 0; k < col; k++)
	            {
	                if (chessboard[i][k] == 1)
	                    score[i][k] += 50;
	            }
	            break;
	        case 7:                     
	            for (int k = 0; k < col; k++)
	            {
	                if (chessboard[i][k] == 1)
	                    score[i][k] += 200;     
	            }
	            break;
	        case 5:                    
	            for (int k = 0; k < col; k++)
	            {
	                if (chessboard[i][k] == 1)
	                    score[i][k] += 500;
	            }
	            break;
	        case 11:                     
	            for (int k = 0; k < col; k++)
	            {
	                if (chessboard[i][k] == 1)
	                    score[i][k] += 1000;
	            }
	            break;
	        }
	        sum = 0;
	    }

	    // ��ÿ�н��з���ͳ��
	    for (int j = 0; j < col; j++)
	    {
	        for (int i = 0; i < row; i++)
	            sum += chessboard[i][j];

	        switch (sum)
	        {
	        case 3:                   
	            for (int k = 0; k < col; k++)
	            {
	                if (chessboard[k][j] == 1)
	                    score[k][j] += 1;
	            }
	            break;
	        case 4:                    
	            for (int k = 0; k < col; k++)
	            {
	                if (chessboard[k][j] == 1)
	                    score[k][j] += 10;
	            }
	            break;
	        case 8:                    
	            for (int k = 0; k <
	                col; k++)
	            {
	                if (chessboard[k][j] == 1)
	                    score[k][j] += 50;
	            }
	            break;
	        case 7:                    
	            for (int k = 0; k < col; k++)
	            {
	                if (chessboard[k][j] == 1)  
	                    score[k][j] += 200;  
	            }
	            break;
	        case 5:                    
	            for (int k = 0; k < col; k++)
	            {
	                if (chessboard[k][j] == 1)
	                    score[k][j] += 500;
	            }
	            break;
	        case 11:                  
	            for (int k = 0; k < col; k++)
	            {
	                if (chessboard[k][j] == 1)
	                    score[k][j] += 1000;
	            }
	            break;
	        }
	        sum = 0;
	    }

	    // �ԶԽ��߽��з���ͳ��
	    for (int i = 0; i < row; i++)
	        sum += chessboard[i][i];
	    switch (sum)
	    {
	    case 3:                    
	        for (int i = 0; i < col; i++)
	        {
	            if (chessboard[i][i] == 1)
	                score[i][i] += 1;
	        }
	        break;
	    case 4:                   
	        for (int i = 0; i < col; i++)
	        {
	            if (chessboard[i][i] == 1)
	                score[i][i] += 10;
	        }
	        break;
	    case 8:                
	        for (int i = 0; i < col; i++)
	        {
	            if (chessboard[i][i] == 1)
	                score[i][i] += 50;
	        }
	        break;
	    case 7:                
	        for (int i = 0; i < col; i++)
	        {
	            if (chessboard[i][i] == 1)
	                score[i][i] += 100;
	        }
	        break;
	    case 5:                
	        for (int i = 0; i < col; i++)
	        {
	            if (chessboard[i][i] == 1)
	                score[i][i] += 500;
	        }
	        break;
	    case 11:                    
	        for (int i = 0; i < col; i++)
	        {
	            if (chessboard[i][i] == 1)
	                score[i][i] += 1000;
	        }
	        break;
	    }

	    // �Է��Խ��߽��з���ͳ��
	    sum = 0;
	    for (int i = 0; i < row; i++)
	        sum += chessboard[i][2 - i];
	    switch (sum)
	    {
	    case 3:                    
	        for (int i = 0; i < col; i++)
	        {
	            if (chessboard[i][2 - i] == 1)
	                score[i][2 - i] += 1;
	        }
	        break;
	    case 4:                    
	        for (int i = 0; i < col; i++)
	        {
	            if (chessboard[i][2 - i] == 1)
	                score[i][2 - i] += 10;
	        }
	        break;
	    case 8:
	        for (int i = 0; i < col; i++)
	        {
	            if (chessboard[i][2 - i] == 1)
	                score[i][2 - i] += 50;
	        }
	        break;
	    case 7:                     
	        for (int i = 0; i < col; i++)
	        {
	            if (chessboard[i][2 - i] == 1)   
	                score[i][2 - i] += 100;
	        }
	        break;
	    case 5:                   
	        for (int i = 0; i < col; i++)
	        {
	            if (chessboard[i][2 - i] == 1)
	                score[i][2 - i] += 500;
	        }
	        break;
	    case 11:                    
	        for (int i = 0; i < col; i++)
	        {
	            if (chessboard[i][2 - i] == 1)
	                score[i][2 - i] += 1000;
	        }
	        break;
	    }

	    int maxRow = 0, maxCol = 0;
	    for (int i = 0; i < row; i++)
	        for (int j = 0; j < col; j++)
	        {
	            if (score[i][j] > score[maxRow][maxCol])
	            {
	                maxRow = i;
	                maxCol = j;
	            }
	        }
	    chessboard[maxRow][maxCol] = 5;
	}
}

package Work1;

import java.util.Scanner;

public class WellGame {

	public static void main(String[] args) {
		Well well= new Well();
		
	}
	
}
	
